###Instruction###
You are a Domain-Specific Language (DSL) expert, your task is to convert software requirements expressed in natural language into DSL code. There are domain statements and interactive statements. Interactive statements are used to define how the user should fulfill the domain statement.

* You MUST think step by step, addressing each requirement sequentially. Ensure that your output adheres strictly to the prescribed DSL grammar and syntax.

* You MUST always include all of the Given, When, and Then statements.

* Strictly follow the DSL Template and examples to structure the code

* You MUST include multiple entities and scenarios to cover all aspects of the task.

* Actions, States, and Properties MUST be defined in camelCase and delimited by commas

* Scenario names MUST be in camelCase

* You MUST use identifiers when you reference an Entity in a Scenario statement. If there only is a single instance, then you name them Entity "My<Entity>". Examples of this include: Profile "MyProfile", Inventory "MyInventory", Catalog "MyCatalog".
* You will be heavily penalized if you use the words "is in", "has", "contains", and "includes". This functionality is NOT supported.
* The sentence structure of the statements MUST follow the sequence seen below. Keep in mind that the elements in parentheses are optional.
    * GIVEN: (Property) -> Entity -> State/Value
    * WHEN: Action -> Entity -> (Entity)
    * THEN: (Property) -> Entity -> State/Value

* You will be penalized if you use actions, states, or properties that are not defined on the entity. 

* You cannot check or set an Entity to a value. This is only allowed for properties of entities. For example: 'Given the TextField "MyTextField" is "text"' is wrong, 'Given the value of the TextField "MyTextField" is "text"' is correct. This only works if the entity has a property.

* You cannot check or set a property to a state. This is only allowed for entities. For example: 'Given the property of the Entity "MyEntity " is stateOne' is wrong, 'Given the Entity "MyEntity" is stateOne' is correct.

* If an entity is meant to be a web element that the user can directly interact with, then attach "is Widget" after the entity's <entity name> before continuing with the attributes. This will inherit the behavior from the Widget entity and allow you to use its attributes on the new entity.

* Use a programming mindset. Everything is precise keywords. Nothing is natural language. There is no room for flexibility or variety in your writing.

* When you structure the scenarios and statements be sure to only use the following keywords. Do not create your own. Keywords = [not, of, off, is, are, for, to, from, into, out, and, I, Given, Then, When, which, means, all, true, false, assure, do, on, in, the]

* If you want to apply the same logic to multiple properties or entities, you have to create a new statement. For example, chaining properties like "coverArt and bookCover" or "coverArt, bookCover" is NOT supported.

* Ensure that your generated code does not have any compilation errors

Present the DSL code within a single code block starting with:
```bdd
model
```

###Task###
I want an e-commerce website for selling high-end office chairs. I want a home page where I can see a catalog of all the items. The items on the home page should only show their picture, the name of the product, and the price. When I click an item I want it to go to a full details page where I can see more information about the product, as well as reviews, and buy it. I want shopping cart and wishlist functionality, so I am also able to add items to my cart or wishlist and then check out when Iâ€™m done shopping.

###DSL Template###
Keep in mind that the "And" statement is only used when chaining multiple of the same statement together and is then used instead of the keyword. Structure your output like the following DSL template:

```bdd
model <model name> using widgets

entity <entity name> {
    actions: <list of supported actions>
    states: <list of supported states>
    properties: <list of supported properties>
}

Scenario: <scenario name>
Given/And <initial domain statement>
    which means
        Given/And <initial interactive statement>
        When/And <interactive action statement>
        Then/And <resultant interactive statement>
When/And <domain action statement>
    which means
        Given/And <initial interactive statement>
        When/And <interactive action statement>
        Then/And <resultant interactive statement>
Then/And <resultant domain statement>
    which means
        Given/And <initial interactive statement>
        When/And <interactive action statement>
        Then/And <resultant interactive statement>
```

###DSL Grammar###

```xtext
grammar no.hal.bdd.BddDsl with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate bddDsl "http://www.hal.no/bdd/BddDsl"

Model:
	('model' name = ID)
	(
		(modelRefs += ModelRef) |
		(entityDefs += EntityDef) |
		(scenarios += Scenario)
	)*
;

ModelRef:
	'using' modelRef = [Model]
;

EntityDef:
	'entity' name = (ID | STRING) ('-'WORD)? ('is' superEntities += [EntityDef] (',' superEntities += [EntityDef])*)? '{'
		('actions:' (actions += ActionDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') actions += ActionDef)*)?
		('states:' (states += StateDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') states += StateDef)*)?
		('properties:' (properties += PropertyDef) WORD? (WORD'-'WORD)? ((','|'and'|'the') properties += PropertyDef)*)?
	'}'
;

ActionDef:
	name = WORD ('and'|'the')? (WORD)? (argument = WORD)? ((preposition = PREP)? | (optionalPref ?= '['? (preposition = PREP|'out'|'off'|'on' 'the' 'row') ']'?))	
	
;

PREP: ('on' | 'in' | 'from' | 'to' | 'into'|'for');
WORD: ID;



StateDef: postive = StateName PREP? ('/' negative = StateName)?;
StateName: name = (WORD) ('and'|'off')?  (WORD)?;

PropertyDef: name = WORD (plural ?= '*')?;

//

ID_OR_STRING: (ID | STRING);

Scenario:
       'Scenario:' name = ID_OR_STRING WORD? ('out'|'off'|'on'|'in'|'-'|'the'|'to' 'the'|'to')? WORD? ('off'|'on'|'in'|'-'|'the')? WORD? ('on'|'in'|'-'|'the')? WORD? ('in'|'-'|'the')? WORD?
       (((('Given''the'|'Given''I'|'Given') ('do' 'not')? ((OPTION)) | ('Given' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE = ScenarioState))
       'which' 'means')?
       (
       'Given' ('the'|'all' 'the')? preState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
       (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action = ScenarioAction 
       'Then' ('the'|'all' 'the')? (STRING)? postState = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
       )
       (
       	((('When' 'I'|'When' 'the'|'When'|'And''I') ('do' 'not')? ((OPTION))) | ((('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) actionE = ScenarioAction ))
       'which' 'means')?
      ( 'Given' ('the'|'all' 'the')? preState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
       (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action1 = ScenarioAction )
       'Then' ('the'|'all' 'the')? (STRING)? postState1 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD?
       )?
       (((('Then''the'|'Then''I'|'Then') ('do' 'not')? ((OPTION)) | ('Then' ('the'|'all' 'the'|'I')? ('do' 'not')? preStateE1 = ScenarioState))
       'which' 'means')?
       ('Given' ('the'|'all' 'the')? preState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in'? WORD?)) WORD?
       (('When' 'I') |('When' 'I' 'do' 'not')| ('When' 'the') | ('Given' 'I')) action2 = ScenarioAction )
       'Then' ('the'|'all' 'the')? (STRING)? postState2 = ScenarioState ('out'|'off'|'on'|'in'|'to' 'the'|'to')? (WORD? | WORD?('-'|'the')?WORD? | (WORD? 'in' WORD?)) WORD? 
       )?
;


ScenarioState:
	states += StatePhrase (('And'|'And' 'the') states += StatePhrase)*
;

ScenarioAction:
	actions += ActionPhrase (('And' 'I'|'And') actions += ActionPhrase)*
;

StatePhrase: ScenarioRef | EntityPropertyStatePhrase | EntityStatePhrase;


ScenarioRef:
	scenarioRef = [Scenario | ID_OR_STRING]
;

//ENTITY_IDENTITY: '#'? (INT | STRING);
ENTITY_IDENTITY: '#'? (INT | STRING);
OPTION:'#'? (INT | STRING) ;

EntityRef:
	 (WORD OPTION 'for' 'the')? ('for'|'of')? (('the'|'all' 'the') entity = [EntityDef | WORD] name = ENTITY_IDENTITY) | (name = ENTITY_IDENTITY)
;

EntityStatePhrase:
	(property = [PropertyDef | WORD]? ('of'|'of' 'the')? OPTION? ('for'|'for' 'the')? ('of'|'of' 'the'|'for' 'the'|'for'))? 
	entity = EntityRef ('is'|'are') 'not'? state = [StateName] WORD?
	 
;

EntityPropertyStatePhrase:
	 property = [PropertyDef | WORD]? ('of'|'of' 'the')? OPTION? ('of'|'for' |'from'|'for' 'the'|'of' 'the')  entity = EntityRef
	((('is'|'is' 'not') value = PropertyValue WORD?) WORD? | (('are'|'are' 'not') (values += PropertyValue) WORD? | (',' values += PropertyValue)*) WORD?) 
;

//terminal UNCLOSED_STRING : '"' (!'"')* EOF;

PropertyValue: SimpleValue | ListValue | SetValue;

SimpleValue: IntValue | BooleanValue | StringValue;

ListValue:
	{ListValue} '[' (values += SimpleValue (',' values += SimpleValue)*)? ']'
;

SetValue:
	{SetValue} '{' (values += SimpleValue (',' values += SimpleValue)*)? '}'
;

StringValue:
	value = STRING
;

IntValue:
	value = INT
;

TRUE: ('true' | 'yes');
FALSE: ('false' | 'no');

BooleanValue:
	value = (TRUE | FALSE)
;

ActionPhrase: VerbAction | VerifyAction;

VerbAction:
	action = ActionRef 'and'? WORD? 'on'? (WORD'-'WORD)? ('for' 'the'| 'the'|'on')? (entity = EntityDef)? ('on'|'off'|'in')? entity = EntityRef ('on'|'off'|'in')? ('of'|'for'|'for' 'the'|'of' 'the')? PREP? entity = EntityRef?
;

ActionRef: verb = [ActionDef | WORD] 'on'? (argument = PropertyValue)? (preposition = PREP)? (('the'|'on')(entity = EntityDef))? ;

VerifyAction:
	'assure' state = StatePhrase
;
```


###DSL Examples###

####Task 1####
I want a movie rating website with a home page with a long list of all movie posters along with their title. When I click on a movie, I go to a details page where I can then see their rating and rate them myself.

####DSL Code for Task 1####
```bdd
model MovieRating using Widgets

entity Movie {
	actions:
		click,
		rateMovie
	states: 
		reviewed, 
		unreviewed
	properties: 
		rating, 
		yourRating, 
		amountOfRatings
}

Scenario: Rate a Movie ten - successful
Given the rating of the Movie "Titanic" is 1
And the amountOfRatings of the Movie "Titanic" is 1
And the Movie "Titanic" is unreviewed
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		Then the value of the TextField "Rating" is "1/10"
		And the value of the TextField "Number of ratings" is "1"
		And the value of the TextField "Your rating" is "None"
When I rateMovie the Movie "Titanic" 10
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		And click on the Button "Rate 10/10"
		Then the value of the TextField "Rating" is "5/10"
		And the value of the TextField "Your rating" is "10/10"
Then the rating of the Movie "Titanic" is 5
And the amountOfRatings of the Movie "Titanic" is 2
And the Movie "Titanic" is reviewed
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		Then the value of the TextField "Rating" is "5/10"
		And the value of the TextField "Number of ratings" is "2"
		
Scenario: Rate a Movie four - successful
Given yourRating of the Movie "Titanic" is "None"
And the Movie "Titanic" is unreviewed
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		Then the value of the TextField "Your rating" is "None"
When I rateMovie the Movie "Titanic" 4
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		And click on the Button "Rate 4/10"
		Then the value of the TextField "Your rating" is "4/10"
Then yourRating of the Movie "Titanic" is 4
And the Movie "Titanic" is reviewed
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		Then the value of the TextField "Rating" is "4/10"
		
Scenario: Rate a Movie one - successful
Given yourRating of the Movie "Titanic" is "None"
And the Movie "Titanic" is unreviewed
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		Then the value of the TextField "Your rating" is "None"
When I rateMovie the Movie "Titanic" 1
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		And click on the Button "Rate 1/10"
		Then the value of the TextField "Your rating" is "1/10"
Then yourRating of the Movie "Titanic" is 1
And the Movie "Titanic" is reviewed
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		Then the value of the TextField "Rating" is "1/10"
		
Scenario: Change rating
Given the Movie "Titanic" is reviewed
And yourRating of the Movie "Titanic" is 10
And the amountOfRatings of the Movie "Titanic" is 1
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		Then the value of the TextField "Your Rating" is "10/10"
		And the value of the TextField "Number of ratings" is "1"
When I rateMovie the Movie "Titanic" 5
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		And click on the Button "Rate 5/10"
		Then the value of the TextField "Your Rating" is "5/10"
Then the Movie "Titanic" is reviewed
And yourRating of the Movie "Titanic" is 5
And the amountOfRatings of the Movie "Titanic" is 1
	which means
		Given the BrowserWindow "Home" is displayed
		When I click on the Movie "Titanic"
		Then the value of the TextField "Your Rating" is "5/10"
		And the value of the TextField "Number of ratings" is "1"
```

####Task 2####
I want a website with a big button and a big number above it. When I press the button the number should goes up.

####DSL Code for Task 2####
```bdd
model IncrementalCounter using Widgets

entity Counter {
    actions:
    	incrementCounter
    states:
        void
    properties:
        value
}

Scenario: Initial display - zero
Given the value of the Counter "MyCounter" is 0
    which means
        Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
        Then the value of the TextField "Counter Value" is "0"
When I incrementCounter the Counter "MyCounter"
    which means
        Given the BrowserWindow "Counter" is displayed
        When I click on the Button "Increment"
        Then the value of the TextField "Counter Value" is "1"
Then the value of the Counter "MyCounter" is 1
    which means
        Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
        Then the value of the TextField "Counter Value" is "1"

Scenario: Increment one - two
Given the value of the Counter "MyCounter" is 1
    which means
        Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
        Then the value of the TextField "Counter Value" is "1"
When I incrementCounter the Counter "MyCounter"
    which means
        Given the BrowserWindow "Counter" is displayed
        When I click on the Button "Increment"
        Then the value of the TextField "Counter Value" is "2"
Then the value of the Counter "MyCounter" is 2
    which means
        Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
        Then the value of the TextField "Counter Value" is "2"

Scenario: Increment two - three
Given the value of the Counter "MyCounter" is 2
	which means
		Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
		Then the value of the TextField "Counter Value" is "2"
When I incrementCounter the Counter "MyCounter"
	which means
		Given the BrowserWindow "Counter" is displayed
		When I click on the Button "Increment"
		Then the value of the TextField "Counter Value" is "3"
Then the value of the Counter "MyCounter" is 3
	which means
		Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
		Then the value of the TextField "Counter Value" is "3"

Scenario: Increment three - four
Given the value of the Counter "MyCounter" is 3
	which means
		Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
		Then the value of the TextField "Counter Value" is "3"
When I incrementCounter the Counter "MyCounter"
	which means
		Given the BrowserWindow "Counter" is displayed
		When I click on the Button "Increment"
		Then the value of the TextField "Counter Value" is "4"
Then the value of the Counter "MyCounter" is 4
	which means
		Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
		Then the value of the TextField "Counter Value" is "4"

Scenario: Increment four - five
Given the value of the Counter "MyCounter" is 4
	which means
		Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
		Then the value of the TextField "Counter Value" is "4"
When I incrementCounter the Counter "MyCounter"
	which means
		Given the BrowserWindow "Counter" is displayed
		When I click on the Button "Increment"
		Then the value of the TextField "Counter Value" is "5"
Then the value of the Counter "MyCounter" is 5
	which means
		Given the BrowserWindow "Home" is displayed
        When I go to the BrowserWindow "Counter"
		Then the value of the TextField "Counter Value" is "5"
```

####Task 3####
Create a website where I can see my account balance and perform SEPA transfers to withdraw the money I have in my account.

####DSL Code for Task 3####
```bdd
model EBank using Widgets

entity Account {
	actions: withdrawAmount, transferAmount
	states: void
	properties: balance
}

Scenario: Withdrawing money - transaction succeeded
Given the balance of the Account "1787461" is 1000
	which means
		Given the BrowserWindow "Account Balance" is displayed
		When I click on "See the balance"
		Then the value of the TextField "Balance" is "1000"
When I transferAmount 1000 from the Account "1787461"
	which means
		Given the BrowserWindow "SEPA Transfer" is displayed
		When I type "1000" into the TextField "Amount"
		Then the Notification "Your transfer has been successfully processed" is displayed
Then the Account "1787461" is void
And the balance of the Account "1787461" is 0
	which means
		Given the BrowserWindow "Account Balance" is displayed
		When I click on "See the balance"
		Then the value of the TextField "Balance" is "0"
```

###Widgets Model###
The 'Widgets' model is an interface for interacting with the website elements. Your model can incorporate entities from the 'Widgets' model. This includes the entities, their actions, states, and properties.

```bdd
model Widgets

entity Widget {
	actions: move, view
	states: displayed, shown, available, enabled/disabled
}

entity Field is Widget {
}

entity FieldSet is Widget {
}

entity Text is Widget {
}

entity Label is Widget {
}

entity ProgressBar is Widget {
}

entity Tooltip is Widget {
}

entity CheckBox is Widget {
	actions: check, pick, select, choose, uncheck
	states: checked/unchecked, picked, selected, chosen
	properties: option, options
}

entity ListBox is Widget {
	actions: pick, select, choose
	states: picked, selected, chosen
	properties: option, options
}

entity RadioButton is Widget {
	actions: pick, select, choose
	states: picked, selected, chosen
	properties: option
}

entity Button is Widget {
	actions: click [on], submit
	states: clicked, submitted
	properties: value
}

entity Calendar is Widget {
	actions: select, choose, pick, set
	states: selected, chosen, picked, set
	properties: date	
}

entity TimePicker is Widget {
	actions: select, choose, pick, set
	states: selected, chosen, picked, set
	properties: time
}

entity Link is Widget {
	actions: select, choose, click [on]
	states: selected, chosen, clicked
	properties: option
}

entity DropdownList is Widget {
	actions: select, choose, pick
	states: selected, chosen, picked
	properties: option
}

entity Menu is Widget {
	actions: click [on], select
	states: clicked, selected
	properties: option
}

entity MenuItem is Widget {
	actions: click [on], select
	states: clicked, selected
	properties: option
}

entity Grid is Widget {
	actions: click [on], select, type, compare
	states: clicked, selected, typed, compared
	properties: table, column, line, cell
}

entity TextField is Widget {
	actions: type, set, fill [in]
	states: typed, set, filled
	properties: value
}

entity TextArea is Widget {
	actions: type, set, fill [in]
	states: typed, set, filled
	properties: text
}

entity BrowserWindow is Widget {
	actions: go
	properties: page, title
}

entity Autocomplete is Widget {
	actions: type and choose, type and select
	states: set, filled
	properties: value
}

entity Tree is Widget {
	actions: click [on], select
	states: clicked, selected
	properties: line, tree
}

entity WindowDialog is Widget {
	actions: confirm, cancel, close
	states: confirmed, canceled, closed
	properties: content
}

entity ModalWindow is Widget {
	actions: confirm, cancel, close
	states: confirmed, canceled, closed
	properties: content
}

entity Accordion is Widget {
	actions: click [on], show, hide
	states: clicked, shown, hidden
	properties: item
}

entity TabBar is Widget {
	actions: click [on], select
	states: clicked, selected
	properties: tab
}

entity Notification is Widget {
	actions: click [on], open, close
	states: clicked, open, closed
	properties: message	
}

entity NumericStepper is Widget {
	actions: type, set, fill [in], increase, decrease
	states: typed, set, filled, increased, decreased
	properties: value
}

entity ToggleButton is Widget {
	actions: switch [on], switch [off]
	states: switched, switched
}

entity Breadcrumb is Widget {
	actions: select, choose, click [on]
	states: selected, chosen, clicked
	properties: option
}

entity Icon is Widget {
	actions: click [on]
	states: clicked
}

entity Image is Widget {
	actions: click [on]
	states: clicked
}

entity ImageCarousel is Widget {
	actions: select, choose, click [on], scroll [to]
	states: selected, chosen, clicked, scrolled
	properties: image
}

entity Pagination is Widget {
	actions: go [to]
	properties: page
}

entity SearchBox is Widget {
	actions: type, set, fill [in]
	states: typed, set, filled
	properties: value
}

entity Slider is Widget {
	actions: set [to], adjust, adjust the value to
	states: set, adjusted
	properties: value
}

entity Scrollbar is Widget {
	actions: scroll to the right, scroll to the left, scroll up, scroll down, scroll the page to the right, scroll the page to the left, scroll the page up, scroll the page down
	states: scrolled to the right, scrolled to the left, scrolled up, scrolled down
	properties: page
}

entity Splitter is Widget {
	actions: drag to the right, drag to the left, drag up, drag down 
	states: dragged to the right, dragged to the right, dragged up, dragged down
}

entity TagCloud is Widget {
	actions: select, choose, pick, click [on]
	states: selected, chosen, picked, clicked
	properties: word
}

entity Map is Widget {
	actions: zoom [in], zoom [out], switch [to]
	states: zoomed, switched
	properties: satelite imagery, street, map
}

entity VideoPlayer is Widget {
	actions: play, pause, fast forward, rewind, toggle full screen, exit full screen, turn the volume up, turn the volume down
	states: played, paused, fast forwarded, rewound, toggled, exited, turned up, turned down
	properties: full screen, volume, video 
}
```